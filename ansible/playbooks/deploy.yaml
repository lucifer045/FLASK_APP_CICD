---
- name: Deploy to EKS with auto-rollback
  hosts: localhost 
  become: false 
  gather_facts: no
  vars: 
     DEPLOYMENT_NAME: "flask-deployment"
     LATEST_IMAGE: "{{docker_username}}/{{image}}:{{version}}"
  tasks:
     - block:
          - name: Apply Kubernetes Configuration
            community.kubernetes.k8s:
                 state: present
                 definition: "{{ lookup('file', ./deployment.yaml) | from_yaml }}"
          - name: Verfiy Deployment Status 
            community.kubernetes.k8s_info:
                 kind: Deployment
                 name: "{{DEPLOYMENT_NAME}}"
            register: deployment_status
            until:
               - deployment_status.resources[0].status.readyReplicas == deployment_status.resources[0].status.replicas
               - deployment_status.resources[0].status.conditions | selectattr('type','eq','Progressing') | map(attribute='status') | first == 'True'
            retries: 15
            delay: 10

      rescue:
         - name: Initiate rollback
           community.kubernetes.kubectl:
              command: rollout undo deployment/{{DEPLOYMENT_NAME}}
         - name: Verify rollback status
           community.kubernetes.k8s_info:
              kind: Deployment
              name: "{{DEPLOYMENT_NAME}}" 
           register: rollback_status
           until: rollback_status.resources[0].status.readyReplicas == rollback_status.resources[0].status.replicas
           retries: 10
           delay: 5
         - name: RollBack unsuccessful
           ansible.builtin.fail:
              msg: "Deployment failed and rollback was also unsuccessful"
           when: rollback_status is failed   
                  
  # tasks:
  #     - name: Get current version 
  #       command: "kubectl rollout history deployment/{{DEPLOYMENT_NAME}}"
  #       register: rollout_history
  #       ignore_errors: true
  #       changed_when: false
  #     - name: Extract previous version number
  #       set_fact:
  #           PREVIOUS_REVISION: "{{ (rollout_history.stdout_lines[-2].split()[0] | int) - 1}}" 
  #       when: rollout_history.stdout_lines | length > 1
  #       ignore_errors: true
  #     - block:
  #         - name: Update deployment image
  #           command: "kubectl set image deployment/{{DEPLOYMENT_NAME}} flask-app={{LATEST_IMAGE}}"
  #         - name: Wait for rollout to succeed
  #           command: kubectl rollout status deployment/{{DEPLOYMENT_NAME}}
  #           register: rollout_status
  #           until: rollout_status.rc == 0
  #           retries: 10
  #           delay: 10 
  #       rescue:
  #         - name: Rollback to previous version
  #           command: "kubectl rollout undo deployment/{{DEPLOYMENT_NAME}} revision=Previous_version" 
  #           when: Previous_version is defined
  #         - name: Fail if rollback unsuccessful
  #           fail:
  #              msg: "Deployment failed and rollback was also unsuccessful"   
    
